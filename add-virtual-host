#!/bin/bash
usage(){
    echo "Usage: `basename ${0}` [OPTIONS]... VIRTUALHOST  [ALIAS...]"
    echo -e \
"
Make one tomcat virtual host config in CATALINA_BASE directory. If the 
VIRTUALHOST had defined in server.xml, this one will be ignored. this VIRTUALHOST
can have one or more alias

  VIRTUALHOST       virtual host name
  ALIAS             optional one or more VIRTUALHOST alias

  -b, --base        Overide the env CATALINA_BASE. If no CATALINA_BASE enviro
                    -ment variable, CATALINA_BASE is set to CATALINA_HOME, If
                    CATALINA_HOME environment variable is not set yet, error
                    arise then exit
  -x                Really do the command! Without the option, NOT do
                    anything! display param, location and file for test
  -h, --help        display this help and exit

EXAMPLE
    `basename ${0}` -b /opt/tomcat abc -x
    `basename ${0}` abc abc.somesite.com
    `basename ${0}` abc abc.somesite.com xyz.somesite.com
"
    exit 1
}

invalidopt(){
    echo "`basename ${0}`: invalid option ${1:+--'${1}'} ${2:+: ${2}}"
    echo "Try '`basename ${0}` --help' for more information"
    exit 1
}

invalidparam(){
    echo "`basename ${0}`: invalid parameters ${1:+--'${1}'} ${2:+: ${2}}"
    echo "Try '`basename ${0}` --help' for more information"
    exit 1
}

newhost(){
  host=$2
  appBase="webappsVHR/$2"
  prefix="$2_acccess_log"

  hl0="\n"
  hl1="      <Host name=\"${host}\"  appBase=\"${appBase}\"\n"
  hl2="            unpackWARs=\"true\" autoDeploy=\"true\">\n"
  
  for i in ${@:3}; do
    a="        <Alias>${i}</Alias>\n"
    alias="${alias}${a}"
  done
  
  hl3="        <Valve className=\"org.apache.catalina.valves.AccessLogValve\" directory=\"logs\"\n"
  hl4="               prefix=\"${prefix}\" suffix=\".txt\"\n"
  hl5="               pattern=\"%h %l %u %t &quot;%r&quot; %s %b\" />\n"
  hl6="      </Host>"

  nHost=${hl0}${hl1}${hl2}${alias}${hl3}${hl4}${hl5}${hl6}
  content=$(sed "/<\/Engine>/i \\${nHost}" <<< "$1")
}

###################### parse positional parameters
while [[ $1 ]]; do
    case $1 in
        -b | --base )
            CATALINA_BASE=$2
            if [[ -z $2 ]]; then
                invalidopt $1 "must be followed by a path"
            else
                shift 2
            fi
            ;;
        -x )
            FLAG_DO="y"
            shift
            ;;
        -h | --help )
            usage
            break
            ;;
        -- ) # End of all options
            shift
            break
            ;;
        -* )
            invalidopt $1
            ;;
        * )
            if [[ -z $VIRTUALHOST ]]; then
                VIRTUALHOST=$1
            else
                ALIASES[${#ALIASES[@]}]=$1 #put in ALIASES array
            fi
            shift
           ;;
    esac
done

############# check CATALINA_BASE & CATALINA_HOME
if [[ -z $CATALINA_BASE ]]; then
    echo "CATALINA_BASE is not set, set it to CATALINA_HOME"
    CATALINA_BASE=$CATALINA_HOME
fi

if [[ -z $CATALINA_BASE ]]; then
    invalidopt "-b"  "-b CATALINA_BASE need be set, or set CATALINA_BASE or
    CATALINA_HOME variable in environment"
fi

if [[ ! -d $CATALINA_BASE ]]; then 
    invalidopt "-b"  "is not a valid directory"
fi

##############  check server.xml
if [[ ! -f $CATALINA_BASE/conf/server.xml ]]; then
  invalidparam "" "CATALINA_BASE is not valid"
fi

##############  check VIRTUALHOS
if [[ -z $VIRTUALHOST ]]; then
  invalidparam "" "must set one VIRTUALHOST"
fi

VIRTUALHOST_REGEX="^[a-z][a-zA-Z0-9._\-]*$"

if [[ ! $VIRTUALHOST =~ $VIRTUALHOST_REGEX ]]; then 
  invalidparam "$VIRTUALHOST" "is not valid virtual host name"
fi

##############  check ALIAS
if [[ ${#ALIASES[@]} -gt 0 ]]; then
  for i in ${ALIASES[@]}; do
    if [[ ! $i =~ $VIRTUALHOST_REGEX ]]; then 
      invalidparam "$i" "is not valid virtual host alias name"
    fi
  done
fi

#################### prepare and display vairable
CONFIG_FILE=$CATALINA_BASE/conf/server.xml
VIRTUALHOST_CONTEXT_LOC=$CATALINA_BASE/conf/Catalina/$VIRTUALHOST
VIRTUALHOST_WEBAPP_LOC=$CATALINA_BASE/webappsVHR/$VIRTUALHOST

echo "Display param, location and file"
echo -e "\tCATALINA_HOME=\e[1m$CATALINA_HOME\e[0m"
echo -e "\tCATALINA_BASE=\e[1m${CATALINA_BASE}\e[0m"
echo -e "\tCONFIG_FILE=\e[1m${CONFIG_FILE}\e[0m"
echo -e "\tVIRTUALHOST=\e[1m${VIRTUALHOST}\e[0m"
echo -e "\tVIRTUALHOST_CONTEXT_LOC=\e[1m${VIRTUALHOST_CONTEXT_LOC}\e[0m"
echo -e "\tVIRTUALHOST_WEBAPP_LOC=\e[1m${VIRTUALHOST_WEBAPP_LOC}\e[0m"
echo -e "\talias(es)...=\e[1m${ALIASES[@]}\e[0m"

if [[ -z $FLAG_DO ]]; then
  echo -e "\e[1mNOT do anything!\e[0m display param, virtual host name for test"
  exit 0
fi

echo
content=$(cat $CONFIG_FILE)
if [[ $(echo "$content" | grep " *<Host *name= *\"$VIRTUALHOST\"") ]]; then
  echo "existed, ingore: $VIRTUALHOST ";
else
  echo "newhost, addnew: $VIRTUALHOST"
  mkdir -p $VIRTUALHOST_WEBAPP_LOC;  echo -e "\tmkdir \e[1m$VIRTUALHOST_WEBAPP_LOC\e[0m"
  mkdir -p $VIRTUALHOST_CONTEXT_LOC; echo -e "\tmkdir \e[1m$VIRTUALHOST_CONTEXT_LOC\e[0m"
  newhost "$content" $VIRTUALHOST ${ALIASES[@]}
  echo "$content" > $CONFIG_FILE
fi
